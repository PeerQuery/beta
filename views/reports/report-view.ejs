
<!DOCTYPE html>
<html>
<head>
  <!-- Standard Meta -->
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

  <!-- Site Properties -->
	<meta name="description" content="">
	<meta property="og:type" content="website">
	<meta property="og:site_name" content="Peer Query">
	<meta property="og:title" content="Peer Query">
	<meta property="og:description" content="">
	<meta property="og:image" content="https://www.peerquery.com/assets/images/peerquery.png">
	<meta property="fb:app_id" content="384491628645652">
	<link rel="icon" type="image/x-icon" href="/assets/img/favicon.ico">
	<meta name="application-name" content="Peer Query">
	<title>Peer Query</title>

  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.13/semantic.min.css" />
  <link rel="stylesheet" href="/assets/css/custom.css" />
  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.2.13/semantic.min.js"></script>
  <script src="/assets/scripts/timeago.js"></script>
  <script src="https://cdn.steemjs.com/lib/latest/steem.min.js"></script>
	<script src="/assets/scripts/sc2.min.js"></script>
	
	
  <script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/1.0.5/purify.min.js"></script>

</head>
<body>



<section class="navbarSection">
	<% include ../partials/navbar.ejs %>
</section>



	
  <div class="ui container">
	

<div class="two column stackable ui grid">
	
	<section name="main content" class="eleven wide column">
	
      <div class="ui large active centered inline loader" id="loader"></div>
	  
<div id="main-content" style="visibility:hidden">
  
	<!-- title -->
    <h1 class="ui header" id="title">
	</h1>
	
	<br/>
	
	<div class="ui grid">
		<div class="row bottom aligned">
		<div class="ten wide column">
				<a class="ui blue image label" id="author-link">
					<img id="author-img" src="/assets/img/image.png">
						<span id="author"></span>
						<span id="author-rep"></span>
					<div class="detail desktop-only" id="type"></div>
				</a>
				<a class="ui tag label" id="category"></a>
		</div>
		<div class="six wide column right aligned">
			<a class="ui label">
				<i class="wait icon"></i>
				<span class="timeago" id="created"></span>
			</a>
			
		</div>
		</div>
	</div>
	
	
	<div class="ui inverted section divider">
	</div>
	
	
	
	
	
	
	
	
	<!-- post container and tags -->
	<div id="post-container" class="">
	
	<div id="post-body" class="post-body">
	</div>
	
	<br/>
	
	<div id="tags">
	</div>
	
	<div class="ui inverted section divider">
	</div>
	
	</div>
	<!-- end of post container and tags -->
  
  
  
  <div class="ui tiny four statistics">
  <a id="author-href" class="ui tiny statistic">
    <div class="value">
      <img src="/assets/img/image.png" id="author-image" class="ui circular inline image"/>
      <span id="author-reputation"></span>
    </div>
    <div class="label" id="author-account">
    </div>
  </a>
  <div class="ui tiny statistic">
    <div class="value">
      <i class="dollar icon"></i>
	  <span id="earned"></span>
    </div>
    <div class="label">
      Earned
    </div>
  </div>
  <div class="ui tiny statistic voter-popup" id="post-voter-main">
    <div class="value">
      <i class="angle up icon" id="netvotes"></i>
	  <span id="votes"></span>
    </div>
    <div class="label">
      Votes
    </div>
  </div>
  <div class="ui tiny statistic">
    <div class="value">
      <i class="comments icon"></i>
	  <span id="responsescount"></span>
    </div>
    <div class="label">
      Responses
    </div>
  </div>
</div>
  
  
  
  
	
	<div class="ui inverted section divider">
	</div>
	
	<div style="margin-bottom:10px;">
	
	<button id="follow-btn" class="ui button" title="Follow">
		<i class="user icon"></i>
		<span class="desktop-only">Follow</span>
	</button>
	
	<button id="share-toggle" class="ui right floated button" title="Share">
		<i class="share alternate icon"></i>
		<span class="desktop-only">Share</span>
	</button>
	
	<button id="resteem" class="ui right floated button" title="Re Steem">
		<i class="retweet icon"></i>
		<span class="desktop-only">Re Steem</span>
	</button>
	
	<button id="response-toggle" class="ui right floated button" title="Respond">
		<i class="reply icon"></i>
		<span class="desktop-only">Respond</span>
	</button>
	
	<button id="vote-toggle" class="ui right floated button" onClick="votePanelBtn(this.id);" title="Upvote">
		<span id="qvotespan">
			<i class="thumbs up icon"></i>
			<span class="desktop-only">Upvote</span>
		</span>
	</button>
	
	</div>
	
	
	
	
	<br/>
	
	
	<div class="ui clearing segment middle aligned stackable grid" id="slider-area" style="display:none">
	
	<div class="ui slidercontainer twelve wide column">
		<input type="range" min="100" max="10000" value="500" class="slider" id="qRange">
	</div>
	
	
	
	<div class="four wide column">
	<div class="ui mini right floated left labeled button">
		<a class="ui basic right pointing label">
			<i class="heart icon"></i>
		</a>
		<div class="ui mini button" id="vote-btn" data-value="500" data-href="" data-votestate="false" data-author="" tabindex="0" onClick="vote(this.id)">
			+5%
		</div>
	</div>
	</div>
	
	</div>
	
	
	
	
	
	
	
	
	
	
	
	<div id="share-area" style="display:none">
	
	<a class="ui facebook button" target="_blank" id="fb-btn">
		<i class="facebook icon"></i>
		<span class="desktop-only">Facebook</span>
	</a>
	<a class="ui twitter button" target="_blank" id="twitter-btn">
		<i class="twitter icon"></i>
		<span class="desktop-only">Twitter</span>
	</a>
	<a class="ui google plus button" target="_blank" id="google-btn">
		<i class="google plus icon"></i>
		<span class="desktop-only">Google Plus</span>
	</a>
	<a class="ui linkedin button" target="_blank" id="linked-btn">
		<i class="linkedin icon"></i>
		<span class="desktop-only">LinkedIn</span>
	</a>
	<a class="ui teal button" target="_blank" id="reddit-btn">
		<i class="reddit icon"></i>
		<span class="desktop-only">Reddit</span>
	</a>
	<a class="ui tumblr button" target="_blank" id="tumblr-btn">
		<i class="tumblr icon"></i>
		<span class="desktop-only">Tumblr</span>
	</a>
	
	</div>
	
	
	
	
	<br/>
	
  
  <form id="response-form" style="display:none" class="ui reply form">
    <div class="field">
      <textarea id="response"></textarea>
    </div>
    <div class="ui blue labeled submit icon button" id="responsebtn" onClick="addresponse()">
      <i class="icon edit"></i> Add Response
    </div>
  </form>
  
  
	
	
	
	<br/>
	
	
	
 
	
	<div class="ui inverted section divider">
	</div>
	
  
  
	<div class="ui basic segment" id="comment-sort" style="visibility:hidden">
		<div class="ui right floated floating labeled icon dropdown button">
			<i class="find icon"></i>
			<span class="text">Sort by</span>
			<div class="menu">
			<div class="item" id="mostvoted-tab">
			<i class="star icon"></i>
			Votes
			</div>
			<div class="divider"></div>
			<div class="item" id="trending-tab">
			<i class="dollar icon"></i>
			Trending
			</div>
			<div class="divider"></div>
			<div class="item" id="newest-tab">
			<i class="wait icon"></i>
			Newest
			</div>
			<div class="divider"></div>
			<div class="item" id="oldest-tab">
			<i class="history icon"></i>
			Oldest
			</div>
			</div>
		</div>

	</div>

	
  
    <div class="ui active centered inline loader" id="comments-spinner" style="display:none"></div>
  

	<div class="ui divided items" id="comments-container">
  
	</div>
  
  
  
  </div>

	
	</section>
	
	
	
	
	<section name="sidebar" class="five wide column">
		<% include ../partials/sidebar.ejs %>
	</section>
	
	
</div>
	  
	</div>
	
	
	<!-- temp -->
		<div id="temp" style="display:none"></div>
	<!-- temp -->
	
	
	

  
	<section class="footerSection">
		<% include ../partials/footer.ejs %>
	</section>


  
	
  <script src="/assets/scripts/utilities.js"></script>
	
	
	
  <script>
   
   
	var post_category = "";
	var parent_author = "";
	var parent_permlink = "";
	var post_earned = 0;
	var responders_earned = 0;
	
	

function readCookie(name) {
	var nameEQ = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
	}
	return null;
}


	
  
  if (readCookie("SC2A") != null) {
	
    var authInfo = readCookie("SC2A");
    authInfo = window.atob(authInfo);
    authInfo = JSON.parse(authInfo);
	
	//account = authInfo.username;	
	activeAccount = authInfo.username;
	document.getElementById('resteem').dataset.account = authInfo.username;
	
	
  } else {
  
	activeAccount = "";
	
  }
   
   
	
	steem.api.setOptions({ url: 'https://api.steemit.com' });
	
	
   
	//get permLINK and author from URL
	let articleURL = window.location.pathname;
	
	let str = articleURL.substr(articleURL.indexOf("@") + 1);
	let permlink = str.substr(str.indexOf("/") + 1);
	//console.log(permlink);
	
	let category = articleURL.substring((articleURL.indexOf("/") + 1),  articleURL.indexOf("@") -1);
	//console.log(category);
	
	let author = str.substring((str.indexOf("@") + 1), str.indexOf("/"));
	//console.log(author);
	
	
	
	
	document.getElementById('type').innerText = "writes in";
	
	if (category == "proposal") document.getElementById('type').innerText = "proposes in";
	if (category == "question") document.getElementById('type').innerText = "questions in";
	if (category == "contest") document.getElementById('type').innerText = "contests in";
	if (category == "quiz") document.getElementById('type').innerText = "quizzes in";
	if (category == "gig") document.getElementById('type').innerText = "outsources in";
	
	
	
	document.getElementById('author-link').href = "/@" + author;
	document.getElementById('author-href').href = "/@" + author;
	document.getElementById('author').innerText = author.charAt(0).toUpperCase() + author.slice(1);
	document.getElementById('author-account').innerText = author.toUpperCase();
	document.getElementById("author-img").src = "https://img.busy.org/@" + author;
	document.getElementById('author-img').onerror = function() {this.src='/assets/img/avatar.png'; this.onerror='';};
	document.getElementById("author-image").src = "https://img.busy.org/@" + author;
	document.getElementById('author-image').onerror = function() {this.src='/assets/img/avatar.png'; this.onerror='';};
	document.getElementById("follow-btn").dataset.following = author;
   
   if (author == activeAccount) document.getElementById("follow-btn").className = "ui disabled button";
   if (author == activeAccount) document.getElementById("resteem").className = "ui disabled right floated button";
   
   
   
	$("#follow-btn").click(function(){	
		
		if (readCookie("SC2A") == null) { window.location.href = authLink; return ; };
		
		document.getElementById("follow-btn").className = "ui disabled button";
		
		var following = document.getElementById("follow-btn").dataset.following;
		var follower = activeAccount;
		
		if (follower == following) { alert("You cannot follow yourself!"); return };
		
		sc2.follow(follower, following, function (err, res) {
			//console.log(err, res)
			if (err) alert (err);
		});
	
	});
   
   
   
	$("#share-toggle").click(function(){	
	
		$("#share-area").slideToggle("slow");
	});
   
	
   

steem.api.getContent(author, permlink, async function(err, result) {
	//console.log(err, result);
  if (err) {
	//alert(err);
	window.location.reload;
  } else {
	//displayPost(result);
	document.title = result.title + " - Peer Query";
	///checkVote(result, result.active_votes);
	document.getElementById('author-rep').innerText = "(" + steem.formatter.reputation(result.author_reputation) + ")";
	document.getElementById('author-reputation').innerText = "(" + steem.formatter.reputation(result.author_reputation) + ")";
	document.getElementById('created').title = result.created;
	
	
	document.getElementById('stats-last-activity').title = result.active;
	
	
	document.getElementById('title').innerText = result.title;

	document.getElementById('category').innerText = result.category;
	document.getElementById('category').href = "/issue/" + result.parent_permlink;
	
	document.getElementById('resteem').dataset.author = result.author;
	document.getElementById('resteem').dataset.href = result.permlink;
	
	if (result.children > 0) document.getElementById('comment-sort').style.visibility = "visible";
	
	
	
		document.getElementById('vote-toggle').id = result.id;
		document.getElementById('slider-area').id = result.id + "-div";
		
		document.getElementById('vote-btn').dataset.author = result.author;
		document.getElementById('vote-btn').dataset.href = result.permlink;
		document.getElementById('vote-btn').dataset.votestate = "false";
		
		document.getElementById('vote-btn').id = result.id + "-btn";
		
		document.getElementById('qRange').id = result.id + "-range";
		document.getElementById('qvotespan').id = result.id + "-percent";
		
		document.getElementById('votes').id = result.id + "-rescount";
		
		document.getElementById('post-voter-main').id = result.id + "-voterlist";
		
		//document.getElementById('post-voter-main').dataset.html = "<div>" + await listVoters(result.active_votes) + "</div>";
		
		
	var post_earned = Math.max(Number(result.pending_payout_value.split('.')[0]), Number(result.total_payout_value.split('.')[0]) + Number(result.curator_payout_value.split('.')[0])).toLocaleString();
	
	document.getElementById('earned').innerText = post_earned;
	
	document.getElementById('stats-asker-earned').innerText = "$" + post_earned;
	
	
	//----- Body
	//document.getElementById('post-body').innerHTML = converter.makeHtml(result.body);
	
	//console.log(result);
	
	
	renderHTML(result, "#post-body");
	
		checkVote(result, result.active_votes);
		
		
		
	if (result.net_votes > 0) { 
		document.getElementById(result.id + '-rescount').innerText = countVotes(result.active_votes);
	} else if (result.net_votes < 0) {
		document.getElementById('netvotes').className = "angle down icon";
		document.getElementById(result.id + '-rescount').innerText =  countVotes(result.active_votes);
	} else if  (result.net_votes == 0) {
		document.getElementById(result.id + '-rescount').innerText = " 0";
	}
	
	
	
	//----- Tags
	
	if (result.json_metadata) {
		var metadata = JSON.parse(result.json_metadata);
		
		if (metadata.tags) {
			var tags_markup = '<div class="ui right pointing label">Issued in:</div>';
			
			for (x in metadata.tags) {
				
				tags_markup = tags_markup + '<a class="ui basic label" href="/issue/' + metadata.tags[x] + '">' + metadata.tags[x] + '</a>';
				
			}
			
			document.getElementById('tags').innerHTML = tags_markup;
			
		}
	}
	
	
	
	
	
	
	
	
	//----- Share links
	document.getElementById('fb-btn').href = "https://www.facebook.com/sharer/sharer.php?u=" + window.location;
	
	document.getElementById('twitter-btn').href = "http://twitter.com/share?text=" + document.title + document.getElementById('title').innerText + "&url=" + window.location + "&hashtags=peerquery," + result.category;
	
	document.getElementById('google-btn').href = "https://plus.google.com/share?url=" + window.location;
	
	document.getElementById('linked-btn').href = "https://www.linkedin.com/shareArticle?mini=true&url=" + window.location + "&title=" + encodeURI(result.title) + "&summary=&source=peerquery.com";
	
	document.getElementById('reddit-btn').href = "http://reddit.com/submit?url=" + window.location + "&amp;title=" + document.title;
	
	
	document.getElementById('tumblr-btn').href = "http://www.tumblr.com/share?v=3&u=" + window.location + "&t=" + document.title;
	
	
	
	
	post_category = result.parent_permlink;
	parent_author = result.author;
	parent_permlink = result.permlink;
	
	
	
	timeAgo();
	
	
	document.getElementById('loader').style.display = "none";
	document.getElementById('main-content').style.visibility = "visible";
	
	
  }
  
});
   
	
	
	
	
	
	
async function listVoters(votes) {
	
	if(votes.length == 0) return "No votes yet.";
	
	var voter_list = await votes.sort(function(a, b) {
	
		return Math.abs(b.rshares) - Math.abs(a.rshares);
	
	});
	
	//voter_list.sort((a, b) => parseFloat(a.rshares) - parseFloat(b.rshares));
	
	voter_list = voter_list.slice(0, 10);
	
	
    
	
	var v_list = voter_list.map(function(voter_list) { 
		
		if(Number(voter_list.rshares) < 0) return "-" + voter_list.voter;
		
		return "+" + voter_list.voter;
	});
	
	v_list = v_list.join(" <br/> ");
	
	if(votes.length > 10) v_list = v_list + " <br/> and more.";
	
	return v_list;
	
}
	
	
	
   
$("#response-toggle").click(function(){		
	if (readCookie("SC2A") == null) { window.location.href = authLink; return ; };
	$("#response-form").slideToggle("slow");	
});
	
	
	



$("#oldest-tab").click(function(){
	//alert("oldest")
	
	document.getElementById('comments-container').innerHTML = "";
	
	document.getElementById('comments-spinner').style.display = "block";
	
	steem.api.getContentReplies(author, permlink, function(err, responses) {
	
    //console.log(responses)
	
		if (err) {
		//alert (err);
		window.location.reload;
		} else {
		//document.getElementById('infoDiv').style.display = "block";
		document.getElementById('responsescount').innerText = responses.length.toLocaleString();
		
		document.getElementById('comments-spinner').style.display = "none";

		responses = responses;
	
		showResponses(responses);
   
		responses = responses;
	
		}
	});


});



$("#newest-tab").click(function(){
	//alert("newest")
	
	document.getElementById('comments-container').innerHTML = "";
	
	document.getElementById('comments-spinner').style.display = "block";
	
	steem.api.getContentReplies(author, permlink, function(err, responses) {
	
    //console.log(responses)
	
		if (err) {
		//alert (err);
		window.location.reload;
		} else {
		//document.getElementById('infoDiv').style.display = "block";
		document.getElementById('responsescount').innerText = responses.length.toLocaleString();
		
		document.getElementById('comments-spinner').style.display = "none";

		responses = responses.sort(function(a, b){return b.id - a.id});
	
		showResponses(responses);
   
		responses = responses;
	
		}
	});



	
});


$("#trending-tab").click(function(){
	//alert("trending")
	
	
	document.getElementById('comments-container').innerHTML = "";
	
	document.getElementById('comments-spinner').style.display = "block";
	
	steem.api.getContentReplies(author, permlink, async function(err, responses) {
    
	//console.log(responses)
	
		if (err) {
		//alert (err);
		window.location.reload;
		} else {
		//document.getElementById('infoDiv').style.display = "block";
		document.getElementById('responsescount').innerText = responses.length.toLocaleString();
		
		document.getElementById('comments-spinner').style.display = "none";

		responses = await responses.sort(function(a, b) {
			
			return Number(b.net_rshares) - Number(a.net_rshares);
				
		});
	
		showResponses(responses);
   
		responses = responses;
	
		}
	});




});


$("#mostvoted-tab").click(function(){
	//alert("mostvoted")
	
	document.getElementById('comments-container').innerHTML = "";
	
	document.getElementById('comments-spinner').style.display = "block";
	
	steem.api.getContentReplies(author, permlink, function(err, responses) {
	
    //console.log(responses)
	
		if (err) {
		//alert (err);
		window.location.reload;
		} else {
		//document.getElementById('infoDiv').style.display = "block";
		document.getElementById('responsescount').innerText = responses.length.toLocaleString();
		
		document.getElementById('stats-responses').innerText = responses.length.toLocaleString();
		
		document.getElementById('comments-spinner').style.display = "none";

		responses = responses.sort(function(a, b){return b.net_votes - a.net_votes});
	
		showResponses(responses);
   
		responses = responses;
	
		}
	});



});
  



	
	document.getElementById('mostvoted-tab').click();




function showResponses(responses) {

	//alert("create responses works");
	
	if (responses.length == 0) { 
			responsesReady();
			return;
		}

	for (x in responses) {
		create_comment_card(responses[x]);
	}
	
	for (x in responses) {
		checkResponseVotes(responses[x], responses[x].net_votes);
			
		if (x == responses.length-1) {
			responsesReady();
			
		}
	}
	
}


	
	

	
	
function checkCash(pst) {
	return Math.max(Number(pst.pending_payout_value.split(' ')[0]), Number(pst.total_payout_value.split(' ')[0]) + Number(pst.curator_payout_value.split(' ')[0])).toLocaleString();
}	

	


function votePanelBtn(eID) {
	
	if (readCookie("SC2A") == null) { window.location.href = authLink; return ; };
	
	var slidrDiv = document.getElementById(eID + "-div");
	var slidr = document.getElementById(eID + "-range");
	
	$("#" + eID + "-div").slideToggle();
	
};

	
	
	
	
	
	
	
	
	

function create_comment_card(response) {
	
	var item = document.createElement("div");
	item.id = "item-" + response.id;
	item.className = "item";
	
	var author_img_div = document.createElement("div");
	author_img_div.className = "ui tiny image";
	
	
	var author_img = document.createElement("img");
	author_img.className = "ui avatar image";
	author_img.style.height = "80px";
	author_img.style.width = "80px";
	author_img.src =  "https://img.busy.org/@" + response.author;
	author_img.onerror = function() {this.src='/assets/img/avatar.png'; this.onerror='';};
	
	
	
	var stats_div = document.createElement("div");
	stats_div.className = "ui tiny statistic voter-popup";
	stats_div.id = response.id + "-voterlist";
	
	var div_votes = document.createElement("div");
	div_votes.className = "value";
	
	var span_votes = document.createElement("span");
	//span_votes.innerText = response.net_votes.toLocaleString();
	span_votes.id= response.id + "-rescount";
	
	div_votes.appendChild(span_votes);
	
	
	var div_votes_icon = document.createElement("div");
	div_votes_icon.className = "value";
	
	var i_votes = document.createElement("i");
	i_votes.className = "thumbs outline up icon";
	
	div_votes_icon.appendChild(i_votes);
	
	
	stats_div.appendChild(div_votes);
	stats_div.appendChild(div_votes_icon);
	
	
	author_img_div.appendChild(author_img);
	author_img_div.appendChild(stats_div);
	
	//item.appendChild(author_img_div);
	
	
	var content = document.createElement("div");
	content.className = "content";
	
	var header = document.createElement("a");
	header.className = "header";
	header.href = "#" + response.id;
	header.innerText = response.id;
	
	var div_author = document.createElement("div");
	div_author.className = "meta";
	
	var au_author = document.createElement("a");
	au_author.href = "/@" + response.author;
	au_author.innerText = "@" + response.author.toUpperCase() + "(" + steem.formatter.reputation(response.author_reputation) + ")";
	
	div_author.appendChild(au_author);
	
	var div_response = document.createElement("div");
	div_response.className = "description post-body";
	div_response.innerHTML = parseHTML(response.body);
	
	
	
	var vote_div = document.createElement("div");
	vote_div.className = "ui clearing segment middle aligned stackable grid";
	vote_div.id = response.id + "-div";
	vote_div.style.display = "none";
	
	var slider_area = document.createElement("div");
	slider_area.className = "ui slidercontainer twelve wide column";
	
	var slider_input = document.createElement("input");
	slider_input.className = "slider";
	slider_input.type = "range";
	slider_input.min = "100";
	slider_input.max = "10000";
	slider_input.value = "500";
	slider_input.id = response.id + "-range";
	
	slider_area.appendChild(slider_input);
	
	
	var vote_col_div = document.createElement("div");
	vote_col_div.className = "four wide column";
	
	var vote_btn_div = document.createElement("div");
	vote_btn_div.className = "ui mini right floated left labeled button";
	vote_btn_div.setAttribute("tabindex", "0");
	
	
	
	
	var a_icon = document.createElement("a");
	a_icon.className = "ui basic right pointing label";
	
	var i_vote_icon = document.createElement("i");
	i_vote_icon.className = "heart icon";
	
	a_icon.appendChild(i_vote_icon);
	
	
	
	
	var div_vote_percent = document.createElement("div");
	div_vote_percent.className = "ui mini button";
	div_vote_percent.id = response.id + "-btn";
	div_vote_percent.innerText = "+5%";
	div_vote_percent.dataset.votestate = "false";
	div_vote_percent.dataset.value = "500";
	div_vote_percent.dataset.href = response.permlink;
	div_vote_percent.dataset.author = response.author;
	div_vote_percent.onclick = function() { vote(this.id) };
	
	
	
	vote_btn_div.appendChild(a_icon);
	vote_btn_div.appendChild(div_vote_percent);
	
	vote_col_div.appendChild(vote_btn_div);
	
	vote_div.appendChild(slider_area);
	
	
	vote_div.appendChild(vote_col_div);
	
	
	
	
	
	var div_extra = document.createElement("div");
	div_extra.className = "extra";
	
	
	var div_time = document.createElement("div");
	div_time.className = "ui label";
	
	var i_time_icon = document.createElement("i");
	i_time_icon.className = "wait icon";
	
	var span_time = document.createElement("span");
	span_time.className = "timeago";
	span_time.title = response.created;
	
	div_time.appendChild(i_time_icon);
	div_time.appendChild(span_time);
	
	
	var div_vote_toggle = document.createElement("div");
	div_vote_toggle.className = "ui left labeled right floated tiny button";
	div_vote_toggle.setAttribute("tabindex", "0");
	div_vote_toggle.id = response.id;
	div_vote_toggle.onclick = function(e) {e.preventDefault(); votePanelBtn(this.id) };
	
	
	var comment_earned = Math.max(Number(response.pending_payout_value.split(' ')[0]), Number(response.total_payout_value.split(' ')[0]) + Number(response.curator_payout_value.split(' ')[0])).toLocaleString();
	
	
	var a_earned = document.createElement("div");
	a_earned.className = "ui basic right pointing label";
	a_earned.innerText = "$" + comment_earned;
	
	
	responders_earned = responders_earned + Number(comment_earned);
	
	
	var earned_icon_div = document.createElement("div");
	earned_icon_div.className = "ui tiny button";
	earned_icon_div.id = response.id + "-percent";
	
	var i_vote_icon2 = document.createElement("i");
	i_vote_icon2.className = "thumbs up icon";
	
	var span_upvote = document.createElement("span");
	span_upvote.className = "desktop-only";
	span_upvote.innerText = "Upvote";
	
	earned_icon_div.appendChild(i_vote_icon2);
	earned_icon_div.appendChild(span_upvote);
	
	div_vote_toggle.appendChild(a_earned);
	div_vote_toggle.appendChild(earned_icon_div);
	
	
	div_extra.appendChild(div_time);
	div_extra.appendChild(div_vote_toggle);
	
	
	content.appendChild(header);
	content.appendChild(div_author);
	content.appendChild(div_response);
	content.appendChild(vote_div);
	content.appendChild(div_extra);
	
	
	item.appendChild(author_img_div);
	item.appendChild(content);
	
	
	document.getElementById("comments-container").appendChild(item);
	
	
}
	
	
	
	
	


async function checkVote(resp, voteArray) {

	for (x in voteArray) {
	
		if (voteArray[x].voter == activeAccount && voteArray[x].percent > 0) {
			document.getElementById(resp.id + "-percent").innerHTML = "<span class='desktop-only'> Voted at: </span>" + voteArray[x].percent/100 + "%";
			document.getElementById(resp.id + "-btn").dataset.votestate = "true";
			document.getElementById(resp.id + "-btn").dataset.value = "0";
			document.getElementById(resp.id + "-range").value = voteArray[x].percent;
			document.getElementById(resp.id + "-range").disabled = true;
			document.getElementById(resp.id + "-btn").innerText = " Unvote";
		} else {
			//document.getElementById(resp.id + "-range").value = "500";
		}
	}
	
	//console.log(resp, voteArray);
	
	document.getElementById(resp.id + "-voterlist").dataset.html = "<div>" + await listVoters(voteArray) + "</div>";

};
	

	
	

function countVotes(Votes) {

var unVotes = Votes.reduce(function (n, vot) {
    return n + (vot.percent == '0');
}, 0);

//console.log("Number of votes removed is: " + unVotes);

return Votes.length - unVotes;
}


	
function checkResponseVotes(response, netVotes) {
	
steem.api.getActiveVotes(response.author, response.permlink, function(err, activeVotes) {
	
	//console.log(activeVotes);
	
	if (netVotes > 0) { 
		document.getElementById(response.id + "-rescount").innerText = " +" + countVotes(activeVotes);
	} else if (netVotes < 0) {
		document.getElementById(response.id + "-rescount").innerText = " -" + countVotes(activeVotes);
	} else if  (netVotes == 0) {
		document.getElementById(response.id + "-rescount").innerText = " 0";
	}
	
	checkVote(response, activeVotes);
	
});

}





 
function addresponse() {
	
	
		
		document.getElementById('responsebtn').className = "ui disabled blue labeled submit icon button";
		document.getElementById('response').disabled = true;
		var message = document.getElementById('response').value;
		
		//----toggle close the button, empty its contents and reload the comments area only then enable the disabled onces
		
				
	var tags = post_category;

	
    var permlink = steem.formatter.commentPermlink(parent_author, parent_permlink);
	//console.log(parent_author, parent_permlink, activeAccount, permlink, '', message, '');
	
	
	sc2.comment(parent_author, parent_permlink, activeAccount, permlink, '', message, '', function(err, result) {
		//console.log(result);
		
		if (err) {
			nErr = JSON.stringify(err.error_description);
			
			document.getElementById('response').disabled = false;
			document.getElementById('responsebtn').className = "ui blue labeled submit icon button";
					
			//console.log(nErr);
			
				if (nErr.indexOf("The comment is archived") > -1)
					return alert("Post with the same permlink already exists and is archived, please change your permlink.");
					
					
				if (nErr.indexOf("You may only post once every 5") > -1)
					return alert("You may only post once every five minutes!");
					
					
		
					return;
				
						
			//throw err;
			alert('Failure! ' + err);
			
		}  else {
			
			
			//alert('Success!');
			
			///---------------------------------------call the function to reload the comments instead of reloading the whole page
			
			
			
			steem.api.getContent(activeAccount, permlink, function(err, result) {
				//console.log(err, result);
				
				$("#response-form").slideToggle("slow");
				document.getElementById('responsebtn').className = "ui blue labeled submit icon button";
				document.getElementById('response').disabled = false;
				document.getElementById('response').value = "";
		
				create_comment_card(result);
				timeAgo();
				responsesReady();
				
				var tAnchor = "#" +  result.id;
					
					$('html, body').animate({
					scrollTop: $(tAnchor).offset().top
					}, 1000);
					
					//$('#item-' + result.id).animate({backgroundColor: '#CD3333'}, 'slow'); 			//NOT working!!!
					
			});
	
		}
		
	
	});
	
	
	
}


$("#resteem").click(function(){
	
	if (readCookie("SC2A") == null) { window.location.href = authLink; return ; };
	
	document.getElementById('resteem').className = "ui disabled right floated button";
	
	sc2.reblog(account, this.dataset.author, this.dataset.href, function (err, rRes) {
		//console.log(err, rRes);
		
		if (err) {
	
				nErr = JSON.stringify(err);
			
				if (nErr.indexOf("Account has already re-blogged this post") > -1) {
					console.log("Already re-blogged");
				};
			
			} else {
			console.log("Resteemed!");
		}
	
	
	});


});

		


function vote(elID) {
	
	if (document.getElementById(elID).className.indexOf('disabled') == -1 ){		//this code makes sure that the click only works when the button is NOT disabled

	vter = account;
	athor = document.getElementById(elID).dataset.author;
	pmlink = document.getElementById(elID).dataset.href;
	//weight = Number(document.getElementById(parseInt(elID) + "-range").value);  // not recommended since it removes -/negative values
	//weight = parseInt(document.getElementById(parseInt(elID) + "-range").value);
	weight = parseInt(document.getElementById(elID).dataset.value);
	
	
	//console.log("voter: " + vter + "\n" + "author is: " + athor + "\n" + "permlink is: " + pmlink + "\n" + "weight is: " + weight);
	
	
	cClass = document.getElementById(elID).className;
	vClass = cClass + " disabled";
	
	document.getElementById(elID).className = vClass;  //disable the button while the OP is in progress
	document.getElementById(parseInt(elID) + "-range").disabled = true;	//disbale the slider once the OP is in progress
	
	//console.log(vter, athor, pmlink, weight);
	
	//return;
	
	
	
	sc2.vote(vter, athor, pmlink, weight, function (err, reslt) {
	//console.log(err, reslt);
	if (err) {
		alert(err + "\n" + "Please try again!")
		document.getElementById(elID).className = cClass;  //re-enable the btn after OP is done
	
	} else {
		//console.log(reslt)
		document.getElementById(elID).className = cClass;  //re-enable the btn after OP is done
	
		if (reslt.result.operations[0][1].weight > 0) {
			document.getElementById(elID).dataset.votestate = "true";
			//document.getElementById(elID).className = "btn btn-warning btn-sm fa fa-thumbs-down float-right";
			document.getElementById(elID).dataset.value = "0";
			document.getElementById(elID).innerText = " Unvote";
			document.getElementById(parseInt(elID) + "-percent").innerHTML = "<span class='desktop-only'>Upvoted at: </span>" + document.getElementById(parseInt(elID) + "-range").value/100 + "%";
			document.getElementById(parseInt(elID) + "-rescount").innerText = " " + (Number(document.getElementById(parseInt(elID) + "-rescount").innerText) + 1);
			//document.getElementById(parseInt(elID) + "-range").disabled = true; //disable the slider after a vote is down
			console.log("voted successfully");
		} else /* if (reslt.result.operations[0][1].weight = 0) */ {		// } else if {... does NOT work
			document.getElementById(elID).dataset.votestate = "false";
			document.getElementById(elID).dataset.value = "2000";
			document.getElementById(parseInt(elID) + "-range").value = "2000";
			//document.getElementById(elID).className = "btn btn-success btn-sm fa fa-thumbs-up float-right";
			document.getElementById(parseInt(elID) + "-range").disabled = false;	//re-enable the slider when a vote is removed
			document.getElementById(parseInt(elID) + "-percent").innerHTML = '<i class="thumbs up icon"></i><span class="desktop-only">Upvote</span>';
			document.getElementById(elID).innerText = " +" + document.getElementById(parseInt(elID) + "-range").value/100 + "%";
			document.getElementById(parseInt(elID) + "-rescount").innerHTML = " " + (Number(document.getElementById(parseInt(elID) + "-rescount").innerText) + -1);
			console.log("vote removed!");
		}
	}
	});


}

}



	

	
function responsesReady() {
	
	document.getElementById("stats-responders-earned").innerText = "$" + responders_earned.toFixed(2);

	var slidd = document.getElementsByClassName("slider");

	//console.log("total slidebars are: " + slidd.length);

	for (x in slidd) {
	slidd[x].oninput = function() {

		//alert(slidd[x].id);	//not responsive so NOT advised
		//alert(this.id);		//fully responsive so advised
	
		activeSlidd = document.getElementById(this.id);
		activeBtn = document.getElementById(parseInt(this.id) + "-btn");
	
		//activeBtn.innerHTML = activeSlidd.value/100 + "%";
	
		if (activeBtn.dataset.votestate == 'false') {
			activeBtn.dataset.value = this.value;
			activeBtn.innerText = " + " + this.value/100 + "%";
		} else if (activeBtn.dataset.votestate == 'true') {		//no code in this section will work since if the voted state is true, then slider is disabled!
			//activeBtn.innerHTML = " " + -(this.value/100) + "%";
			//activeBtn.dataset.value = "0";
			//activeBtn.innerHTML = " Remove vote";
		}
	}
	}
	
	timeAgo();
	
	$('.voter-popup')
		.popup()
	;
	
}



	
	

  </script>

  
  
</body>

</html>
